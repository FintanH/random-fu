name:                   rvar
version:                0.2
stability:              stable

cabal-version:          >= 1.2
build-type:             Simple

author:                 James Cook <james.cook@usma.edu>
maintainer:             James Cook <james.cook@usma.edu>
license:                PublicDomain
homepage:               http://code.haskell.org/~mokus/random-fu

category:               Math
synopsis:               Random Variables
description:            Random number generation based on modeling random 
                        variables by an abstract type ('RVar') which can be
                        composed and manipulated monadically and sampled in
                        either monadic or \"pure\" styles.
                        
                        The primary purpose of this library is to support 
                        defining and sampling a wide variety of high quality
                        random variables.  Quality is prioritized over speed,
                        but performance is an important goal too.
                        
                        In my testing, I have found it capable of speed 
                        comparable to other Haskell libraries, but still
                        a fair bit slower than straight C implementations of 
                        the same algorithms.
                        
Library
  ghc-options:          -Wall
  hs-source-dirs:       src
  exposed-modules:      Data.RVar
                        Data.RVar.Internal.Primitives
                        Data.RVar.Internal.Words
    
  build-depends:        base            == 4.*,
                        MonadPrompt     == 1.0.*,
                        mtl             == 1.1.*,
                        transformers    == 0.2.*
